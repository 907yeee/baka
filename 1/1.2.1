# a121_catch_a_turtle.py
#-----import statements-----
import turtle as trtl
import leaderboard as lb
import random as rand
#-----game configuration----
box_color = ("lightblue")
box_size = 3
box_shape = ("square")
score = 0
#-----initialize turtle-----
score_writer = trtl.Turtle()
counter =  trtl.Turtle()
font_setup = ("TImes New Roman", 20, "normal")
timer = 5
counter_interval = 1000   #1000 represents 1 second
timer_up = False
box = trtl.Turtle()
box.shape(box_shape)
box.shapesize(box_size)
box.fillcolor(box_color)
box.speed(0)
colors = ["red", "lime", "blue", "yellow", "magenta", "silver", "maroon", "green", "purple", "navy"]
sizes = [1.5, 1.75, 2, 2.25, 2.5, 2.75, 3]

# leaderboard variables
leaderboard_file_name = "leaderboard.txt"
leader_names_list = []
leader_scores_list = []
player_name = input ("Please enter your name:")

#-----game functions--------

# manages the leaderboard for top 5 scorers
def manage_leaderboard():
  
  global leader_scores_list
  global leader_names_list
  global nerd

  # load all the leaderboard records into the lists
  lb.load_leaderboard(leaderboard_file_name, leader_names_list, leader_scores_list)

  # TODO
  if (len(leader_scores_list) < 5 or score > leader_scores_list[4]):
    lb.update_leaderboard(leaderboard_file_name, leader_names_list, leader_scores_list, player_name, score)
    lb.draw_leaderboard(leader_names_list, leader_scores_list, True, nerd, score)

  else:
    lb.draw_leaderboard(leader_names_list, leader_scores_list, False, nerd, score)


def box_clicked(x,y):
    global timer_up
    if (timer > 0):
        update_score()
        change_position()
    else:
        box.hideturtle()
    add_color()
    size_change()
def change_position():
    new_xpos = rand.randint(-400,400)
    new_ypos = rand.randint(-300,300)
    box.penup()
    box.hideturtle()
    box.goto(new_xpos,new_ypos)
    box.showturtle()
    box.pendown()
def update_score():
    global score
    score += 1
    score_writer.clear()
    score_writer.write("Score: " + str(score),font = font_setup)
def countdown():
  global timer, timer_up
  counter.clear()
  if timer <= 0:
    counter.write("Time's Up", font=font_setup)
    timer_up = True
    manage_leaderboard()
  else:
    counter.write("Timer: " + str(timer), font=font_setup)
    timer -= 1
    counter.getscreen().ontimer(countdown, counter_interval)
def add_color():
    box.color(rand.choice(colors))
    box.fillcolor(box_color)
def size_change():
    box.shapesize(rand.choice(sizes))
#-----events----------------
score_writer.penup()
score_writer.hideturtle()
score_writer.goto(-350,260)
score_writer.pendown()
counter.penup()
counter.hideturtle()
counter.goto(240,260)
counter.pendown()
box.onclick(box_clicked)
wn = trtl.Screen()
wn.bgcolor("cyan")
wn.ontimer(countdown, counter_interval)
wn.mainloop()
